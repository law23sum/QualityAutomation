gradlew test aggregate
gradle clean compileJava test importJUnitResultsToXrayDC
gradlew test -PselectedEnv=staging
gradlew tasks
gradlew test -Pcucumber.features="src/test/resources/features/WebAppsScenariosSpecificZero.feature" -Pcucumber.glue="com.company.steps"
gradlew test -Pcucumber.features="src/test/resources/features/WebAppsScenariosSpecificZero.feature" -Pcucumber.glue="com.company.steps"


https://docs.getxray.app/display/XRAY/Integration+with+eazyBI
https://docs.getxray.app/display/XRAY/Importing+Cucumber+Tests+-+REST
https://docs.getxray.app/display/XRAY/Import+Execution+Results#ImportExecutionResults-CucumberJSONoutputformat
https://docs.getxray.app/display/XRAY/Import+Execution+Results+-+REST
https://docs.getxray.app/display/XRAY/REST+API
https://github.com/rest-assured/rest-assured/wiki/GettingStarted
https://serenity-bdd.github.io/docs/mobile/appium
https://serenity-bdd.github.io/docs/mobile/appium


/***
 This `build.gradle` file is organized into the following sections:

 1. Plugins: Define the plugins required for the project.
 2. Basic project information: Set the project's group, version, and description.
 3. Java source and target compatibility: Configure the Java version.
 4. IDEA project configuration: Configure the IntelliJ IDEA project settings.
 5. Repositories: Define the repositories for fetching dependencies.
 6. External dependency versions: Set the versions for external dependencies.
 7. Dependencies: Define the project dependencies.
 8. Source sets configuration: Configure the source sets for the project.
 9. Maven publishing configuration: Configure the Maven publishing settings.
 10. Compiler options: Set the Java compiler options.
 11. Test execution configuration: Configure
 */

// Section 1: Plugins
plugins {
   id 'net.serenity-bdd.serenity-gradle-plugin' version '3.5.0'
   id 'java'
   id 'org.gradle.java-library'
   id 'groovy'
   id 'idea'
   id 'eclipse'
   id 'java-test-fixtures'
   id 'maven-publish'  // handle publishing artifacts to Maven repo
   id 'com.jfrog.bintray' version '1.8.5'
   id 'com.intershop.gradle.jiraconnector' version '6.3.0'
}

// Section 2: Basic project information
group = 'com.company'
version = '1.0-SNAPSHOT'
description = 'Quality Automation'

import org.gradle.process.internal.ExecException
import au.com.bytecode.opencsv.CSVReader

// Section 3: Java source and target compatibility
sourceCompatibility = JavaVersion.toVersion(properties['javaVersion'])
targetCompatibility = JavaVersion.toVersion(properties['javaVersion'])

jar {
   archiveBaseName = 'QualityAutomation'
   archiveVersion =  '0.0.1'
}

// Section 4: IDEA project configuration
idea {
   module {
      downloadJavadoc = true
      downloadSources = true
   }
}

// Section 5: Repositories
repositories {
   mavenCentral()
   google()
}

// Section 6: External dependency versions
ext {
   junitVersion = '5.9.2'
   cucumberJavaVersion = '7.11.2'
   cucumberJUnitPlatformEngineVersion = '7.11.2'
   serenityCoreVersion = '3.3.6'
   serenityJUnit5Version = '3.6.12+'
   serenityCucumberVersion = '3.6.22'
   groovyMavenPluginVersion = '1.5'
   slf4jApiVersion = '2.0.7'
   restAssuredVersion = '5.3.0'
   seleniumVersion = '4.8.1'
}

// Section 7: Dependencies
dependencies {
   // JUnit 4 for backward compatibility + JUnit 5
   testImplementation 'junit:junit:4.13.1'
   testImplementation "org.junit.jupiter:junit-jupiter-api:${junitVersion}"
   testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${junitVersion}"
   testImplementation "io.cucumber:cucumber-java:${cucumberJavaVersion}"
   testImplementation "io.cucumber:cucumber-junit-platform-engine:${cucumberJUnitPlatformEngineVersion}"

   // Serenity and Cucumber integration for testing
   testImplementation "org.slf4j:slf4j-simple:1.7.30"
   implementation "net.serenity-bdd:serenity-core:${serenityCoreVersion}"
   testImplementation "net.serenity-bdd:
   serenity-junit5:${serenityJUnit5Version}"
   testImplementation "net.serenity-bdd:serenity-cucumber6:${serenityCucumberVersion}"

   // Groovy Maven Plugin for Spock
   implementation "org.codehaus.groovy:groovy-all:${groovyMavenPluginVersion}"
   testImplementation "org.spockframework:spock-core:1.3-groovy-2.5"

   // SLF4J API for logging
   implementation "org.slf4j:slf4j-api:${slf4jApiVersion}"

   // REST Assured for API testing
   testImplementation "io.rest-assured:rest-assured:${restAssuredVersion}"

   // Selenium WebDriver for browser automation
   testImplementation "org.seleniumhq.selenium:selenium-java:${seleniumVersion}"
}

// Section 8: Source sets configuration
sourceSets {
   main {
      java {
         srcDir 'src/main/java'
      }
      resources {
         srcDir 'src/main/resources'
      }
   }
   test {
      java {
         srcDir 'src/test/java'
      }
      resources {
         srcDir 'src/test/resources'
      }
   }
}

// Section 9: Maven publishing configuration
publishing {
   publications {
      mavenJava(MavenPublication) {
         from components.java
      }
   }
}

// Section 10: Compiler options
tasks.withType(JavaCompile) {
   options.encoding = 'UTF-8'
   options.compilerArgs << '-Xlint:unchecked' << '-Xlint:deprecation'
}

// Section 11: Test execution configuration
test {
   useJUnitPlatform()
   testLogging {
      events "passed", "skipped", "failed"
   }
}