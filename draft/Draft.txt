./gradlew test -Pcucumber.tags="@yourTag" -Pwebdriver.base.url="http://your-url.com"
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
group = 'com.company'
version = '0.0.1'
sourceCompatibility = 17
targetCompatibility = 17

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    testImplementation 'io.cucumber:cucumber-java:7.11.2'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.11.2'
    implementation 'net.serenity-bdd:serenity-core:3.3.6'
    implementation 'net.serenity-bdd:serenity-junit5:3.3.6'
    implementation 'net.serenity-bdd:serenity-cucumber:3.6.22'
    implementation 'org.codehaus.mojo:groovy-maven-plugin:1.5'
}

test {
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")
    systemProperty "cucumber.features", project.findProperty("cucumber.features") ?: "src/test/resources/features"
    systemProperty "cucumber.filter.tags", project.findProperty("cucumber.tags") ?: ""
    systemProperty "webdriver.base.url", project.findProperty("webdriver.base.url") ?: "http://localhost:8080"
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    include 'com/company/runner/WebAppRunner.class'
    testLogging {
        events 'passed', 'skipped', 'failed'
    }
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

defaultTasks 'dependencies', 'clean', 'build', 'compileJava', 'listTasks'

task listTasks {
    doLast {
        gradleTasks()
        genericTasks()
    }
}

task printSetupVersions {
    doLast {
        try {
            exec {
                commandLine 'java', '--version'
                ignoreExitValue true
                commandLine 'groovy', '--version'
                ignoreExitValue true
                commandLine 'mvn', '--version'
                ignoreExitValue true
                commandLine 'gradle', '--version'
                ignoreExitValue true
            }
        } catch (org.gradle.process.internal.ExecException e) {
            println "One or more commands are not installed: ${e.message}"
        }
    }
}

task cucumber {
    dependsOn testClasses
    doLast {
        javaexec {
         }
    }
}

task printEnvVariables {
    doLast {
        exec {
            commandLine 'printenv'
        }
    }
}

task deleteBuilds {
    delete 'build'
    delete '.gradle'
    delete 'lib'
    delete 'target'
}

def systemPropertiesSettings() {
    exec {
        commandLine 'export', 'CUCUMBER_PUBLISH_ENABLED=true'
    }}