plugins {
    id 'java'
    id 'groovy'
    id 'idea'
    id 'eclipse'
    id 'maven-publish' // Publish artifacts to a Maven repository
}

group = 'com.company' // Set the group ID for your project
version = '0.0.2-SNAPSHOT'     // Set the version for your project

sourceCompatibility = 17
targetCompatibility = 17

repositories {
    mavenCentral()
}

dependencies {
    // Appium
    testImplementation 'io.appium:java-client:7.3.0'

    // Cucumber
    testImplementation 'io.cucumber:cucumber-bom:7.11.2'
    testImplementation 'io.cucumber:cucumber-junit-platform-engine:7.11.2'
    testImplementation 'io.cucumber:cucumber-java:7.11.2'
    testImplementation 'io.cucumber:cucumber-junit:7.11.2'

    // JUnit 5
    testImplementation 'org.junit.platform:junit-platform-suite-api:1.6.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'

    // Selenium WebDriver
    implementation 'org.seleniumhq.selenium:selenium-java:4.8.1'

    // Log4j
    implementation 'org.apache.logging.log4j:log4j-api:2.13.1'
    implementation 'org.apache.logging.log4j:log4j-core:2.13.1'
    implementation 'org.apache.logging.log4j:log4j-slf4j18-impl:2.13.1'

    // Serenity BDD
    implementation 'net.serenity-bdd:serenity-core:3.5.1'
    implementation 'net.serenity-bdd:serenity-junit5:3.4.2'
    implementation 'net.serenity-bdd:serenity-cucumber6:2.3.33'
}

test {
    useJUnitPlatform()
    systemProperty("cucumber.junit-platform.naming-strategy", "long")

    // Configure the custom TestRunner class
    testClassesDirs = sourceSets.test.output.classesDirs
    classpath = sourceSets.test.runtimeClasspath
    include 'com/company/runner/WebAppRunner.class'
}

compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

defaultTasks 'dependencies', 'clean', 'build', 'compileJava', 'listTasks'

task listTasks {
    doLast {
        gradleTasks()
        genericTasks()
    }
}

task printSetupVersions {
    doLast {
        // Print setup versions
    }
}

task printEnvVariables {
    doLast {
        // Print environment variables
    }
}

task deleteBuilds {
    // Delete build-related folders
}